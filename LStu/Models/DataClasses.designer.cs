#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace LStu.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Profile")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertPermissionDTO(PermissionDTO instance);
    partial void UpdatePermissionDTO(PermissionDTO instance);
    partial void DeletePermissionDTO(PermissionDTO instance);
    partial void InsertResourceDTO(ResourceDTO instance);
    partial void UpdateResourceDTO(ResourceDTO instance);
    partial void DeleteResourceDTO(ResourceDTO instance);
    partial void InsertRoleDTO(RoleDTO instance);
    partial void UpdateRoleDTO(RoleDTO instance);
    partial void DeleteRoleDTO(RoleDTO instance);
    partial void InsertUserDTO(UserDTO instance);
    partial void UpdateUserDTO(UserDTO instance);
    partial void DeleteUserDTO(UserDTO instance);
    partial void InsertDepartmentDTO(DepartmentDTO instance);
    partial void UpdateDepartmentDTO(DepartmentDTO instance);
    partial void DeleteDepartmentDTO(DepartmentDTO instance);
    partial void InsertProfileDTO(ProfileDTO instance);
    partial void UpdateProfileDTO(ProfileDTO instance);
    partial void DeleteProfileDTO(ProfileDTO instance);
    partial void InsertProjectDTO(ProjectDTO instance);
    partial void UpdateProjectDTO(ProjectDTO instance);
    partial void DeleteProjectDTO(ProjectDTO instance);
    partial void InsertProjectSubjectDTO(ProjectSubjectDTO instance);
    partial void UpdateProjectSubjectDTO(ProjectSubjectDTO instance);
    partial void DeleteProjectSubjectDTO(ProjectSubjectDTO instance);
    partial void InsertProjectStageDTO(ProjectStageDTO instance);
    partial void UpdateProjectStageDTO(ProjectStageDTO instance);
    partial void DeleteProjectStageDTO(ProjectStageDTO instance);
    partial void InsertProfileTemporaryDTO(ProfileTemporaryDTO instance);
    partial void UpdateProfileTemporaryDTO(ProfileTemporaryDTO instance);
    partial void DeleteProfileTemporaryDTO(ProfileTemporaryDTO instance);
    partial void InsertAuditDTO(AuditDTO instance);
    partial void UpdateAuditDTO(AuditDTO instance);
    partial void DeleteAuditDTO(AuditDTO instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ProfileConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PermissionDTO> PermissionDTO
		{
			get
			{
				return this.GetTable<PermissionDTO>();
			}
		}
		
		public System.Data.Linq.Table<ResourceDTO> ResourceDTO
		{
			get
			{
				return this.GetTable<ResourceDTO>();
			}
		}
		
		public System.Data.Linq.Table<RoleDTO> RoleDTO
		{
			get
			{
				return this.GetTable<RoleDTO>();
			}
		}
		
		public System.Data.Linq.Table<UserDTO> UserDTO
		{
			get
			{
				return this.GetTable<UserDTO>();
			}
		}
		
		public System.Data.Linq.Table<DepartmentDTO> DepartmentDTO
		{
			get
			{
				return this.GetTable<DepartmentDTO>();
			}
		}
		
		public System.Data.Linq.Table<ProfileDTO> ProfileDTO
		{
			get
			{
				return this.GetTable<ProfileDTO>();
			}
		}
		
		public System.Data.Linq.Table<ProjectDTO> ProjectDTO
		{
			get
			{
				return this.GetTable<ProjectDTO>();
			}
		}
		
		public System.Data.Linq.Table<ProjectSubjectDTO> ProjectSubjectDTO
		{
			get
			{
				return this.GetTable<ProjectSubjectDTO>();
			}
		}
		
		public System.Data.Linq.Table<ProjectStageDTO> ProjectStageDTO
		{
			get
			{
				return this.GetTable<ProjectStageDTO>();
			}
		}
		
		public System.Data.Linq.Table<ProfileTemporaryDTO> ProfileTemporaryDTO
		{
			get
			{
				return this.GetTable<ProfileTemporaryDTO>();
			}
		}
		
		public System.Data.Linq.Table<AuditDTO> AuditDTO
		{
			get
			{
				return this.GetTable<AuditDTO>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Permission")]
	public partial class PermissionDTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Role_Code;
		
		private string _Resource_Code;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRole_CodeChanging(string value);
    partial void OnRole_CodeChanged();
    partial void OnResource_CodeChanging(string value);
    partial void OnResource_CodeChanged();
    #endregion
		
		public PermissionDTO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Role_Code
		{
			get
			{
				return this._Role_Code;
			}
			set
			{
				if ((this._Role_Code != value))
				{
					this.OnRole_CodeChanging(value);
					this.SendPropertyChanging();
					this._Role_Code = value;
					this.SendPropertyChanged("Role_Code");
					this.OnRole_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resource_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Resource_Code
		{
			get
			{
				return this._Resource_Code;
			}
			set
			{
				if ((this._Resource_Code != value))
				{
					this.OnResource_CodeChanging(value);
					this.SendPropertyChanging();
					this._Resource_Code = value;
					this.SendPropertyChanged("Resource_Code");
					this.OnResource_CodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Resource")]
	public partial class ResourceDTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
		private string _Url;
		
		private int _Sort;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnSortChanging(int value);
    partial void OnSortChanged();
    #endregion
		
		public ResourceDTO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort")]
		public int Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Role")]
	public partial class RoleDTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public RoleDTO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_User")]
	public partial class UserDTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Login_Id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Role_Code;
		
		private long _Department_ID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogin_IDChanging(string value);
    partial void OnLogin_IDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnRole_CodeChanging(string value);
    partial void OnRole_CodeChanged();
    partial void OnDepartment_IDChanging(long value);
    partial void OnDepartment_IDChanged();
    #endregion
		
		public UserDTO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Login_Id", Storage="_Login_Id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Login_ID
		{
			get
			{
				return this._Login_Id;
			}
			set
			{
				if ((this._Login_Id != value))
				{
					this.OnLogin_IDChanging(value);
					this.SendPropertyChanging();
					this._Login_Id = value;
					this.SendPropertyChanged("Login_ID");
					this.OnLogin_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Role_Code
		{
			get
			{
				return this._Role_Code;
			}
			set
			{
				if ((this._Role_Code != value))
				{
					this.OnRole_CodeChanging(value);
					this.SendPropertyChanging();
					this._Role_Code = value;
					this.SendPropertyChanged("Role_Code");
					this.OnRole_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department_ID")]
		public long Department_ID
		{
			get
			{
				return this._Department_ID;
			}
			set
			{
				if ((this._Department_ID != value))
				{
					this.OnDepartment_IDChanging(value);
					this.SendPropertyChanging();
					this._Department_ID = value;
					this.SendPropertyChanged("Department_ID");
					this.OnDepartment_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Department")]
	public partial class DepartmentDTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private string _Description;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public DepartmentDTO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Profile")]
	public partial class ProfileDTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Barcode;
		
		private string _Project_Code;
		
		private string _Project_Stage;
		
		private string _Project_Name;
		
		private string _Professional;
		
		private string _File_Name;
		
		private string _Diagram_Name;
		
		private string _Diagram_Code;
		
		private string _Diagram_Scale;
		
		private string _Diagram_Version;
		
		private string _Plotter;
		
		private System.DateTime _Created_Date;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    partial void OnProject_CodeChanging(string value);
    partial void OnProject_CodeChanged();
    partial void OnProject_StageChanging(string value);
    partial void OnProject_StageChanged();
    partial void OnProject_NameChanging(string value);
    partial void OnProject_NameChanged();
    partial void OnProject_SubjectChanging(string value);
    partial void OnProject_SubjectChanged();
    partial void OnFile_NameChanging(string value);
    partial void OnFile_NameChanged();
    partial void OnDiagram_NameChanging(string value);
    partial void OnDiagram_NameChanged();
    partial void OnDiagram_CodeChanging(string value);
    partial void OnDiagram_CodeChanged();
    partial void OnDiagram_ScaleChanging(string value);
    partial void OnDiagram_ScaleChanged();
    partial void OnDiagram_VersionChanging(string value);
    partial void OnDiagram_VersionChanged();
    partial void OnPlotterChanging(string value);
    partial void OnPlotterChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    #endregion
		
		public ProfileDTO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Project_Code
		{
			get
			{
				return this._Project_Code;
			}
			set
			{
				if ((this._Project_Code != value))
				{
					this.OnProject_CodeChanging(value);
					this.SendPropertyChanging();
					this._Project_Code = value;
					this.SendPropertyChanged("Project_Code");
					this.OnProject_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Stage", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Project_Stage
		{
			get
			{
				return this._Project_Stage;
			}
			set
			{
				if ((this._Project_Stage != value))
				{
					this.OnProject_StageChanging(value);
					this.SendPropertyChanging();
					this._Project_Stage = value;
					this.SendPropertyChanged("Project_Stage");
					this.OnProject_StageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Name", DbType="VarChar(50)")]
		public string Project_Name
		{
			get
			{
				return this._Project_Name;
			}
			set
			{
				if ((this._Project_Name != value))
				{
					this.OnProject_NameChanging(value);
					this.SendPropertyChanging();
					this._Project_Name = value;
					this.SendPropertyChanged("Project_Name");
					this.OnProject_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Professional", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Project_Subject
		{
			get
			{
				return this._Professional;
			}
			set
			{
				if ((this._Professional != value))
				{
					this.OnProject_SubjectChanging(value);
					this.SendPropertyChanging();
					this._Professional = value;
					this.SendPropertyChanged("Project_Subject");
					this.OnProject_SubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Name", DbType="VarChar(250)")]
		public string File_Name
		{
			get
			{
				return this._File_Name;
			}
			set
			{
				if ((this._File_Name != value))
				{
					this.OnFile_NameChanging(value);
					this.SendPropertyChanging();
					this._File_Name = value;
					this.SendPropertyChanged("File_Name");
					this.OnFile_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diagram_Name", DbType="VarChar(50)")]
		public string Diagram_Name
		{
			get
			{
				return this._Diagram_Name;
			}
			set
			{
				if ((this._Diagram_Name != value))
				{
					this.OnDiagram_NameChanging(value);
					this.SendPropertyChanging();
					this._Diagram_Name = value;
					this.SendPropertyChanged("Diagram_Name");
					this.OnDiagram_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diagram_Code", DbType="VarChar(20)")]
		public string Diagram_Code
		{
			get
			{
				return this._Diagram_Code;
			}
			set
			{
				if ((this._Diagram_Code != value))
				{
					this.OnDiagram_CodeChanging(value);
					this.SendPropertyChanging();
					this._Diagram_Code = value;
					this.SendPropertyChanged("Diagram_Code");
					this.OnDiagram_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diagram_Scale", DbType="VarChar(50)")]
		public string Diagram_Scale
		{
			get
			{
				return this._Diagram_Scale;
			}
			set
			{
				if ((this._Diagram_Scale != value))
				{
					this.OnDiagram_ScaleChanging(value);
					this.SendPropertyChanging();
					this._Diagram_Scale = value;
					this.SendPropertyChanged("Diagram_Scale");
					this.OnDiagram_ScaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diagram_Version", DbType="VarChar(20)")]
		public string Diagram_Version
		{
			get
			{
				return this._Diagram_Version;
			}
			set
			{
				if ((this._Diagram_Version != value))
				{
					this.OnDiagram_VersionChanging(value);
					this.SendPropertyChanging();
					this._Diagram_Version = value;
					this.SendPropertyChanged("Diagram_Version");
					this.OnDiagram_VersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Plotter", DbType="VarChar(20)")]
		public string Plotter
		{
			get
			{
				return this._Plotter;
			}
			set
			{
				if ((this._Plotter != value))
				{
					this.OnPlotterChanging(value);
					this.SendPropertyChanging();
					this._Plotter = value;
					this.SendPropertyChanged("Plotter");
					this.OnPlotterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Project")]
	public partial class ProjectDTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Project_Code;
		
		private string _Project_Name;
		
		private string _Project_Date;
		
		private string _Business_Owner;
		
		private string _Description;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnProject_CodeChanging(string value);
    partial void OnProject_CodeChanged();
    partial void OnProject_NameChanging(string value);
    partial void OnProject_NameChanged();
    partial void OnProject_DateChanging(string value);
    partial void OnProject_DateChanged();
    partial void OnBusiness_OwnerChanging(string value);
    partial void OnBusiness_OwnerChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ProjectDTO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Project_Code
		{
			get
			{
				return this._Project_Code;
			}
			set
			{
				if ((this._Project_Code != value))
				{
					this.OnProject_CodeChanging(value);
					this.SendPropertyChanging();
					this._Project_Code = value;
					this.SendPropertyChanged("Project_Code");
					this.OnProject_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Project_Name
		{
			get
			{
				return this._Project_Name;
			}
			set
			{
				if ((this._Project_Name != value))
				{
					this.OnProject_NameChanging(value);
					this.SendPropertyChanging();
					this._Project_Name = value;
					this.SendPropertyChanged("Project_Name");
					this.OnProject_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Date", DbType="Varchar", CanBeNull=false)]
		public string Project_Date
		{
			get
			{
				return this._Project_Date;
			}
			set
			{
				if ((this._Project_Date != value))
				{
					this.OnProject_DateChanging(value);
					this.SendPropertyChanging();
					this._Project_Date = value;
					this.SendPropertyChanged("Project_Date");
					this.OnProject_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Business_Owner", DbType="VarChar(50)")]
		public string Business_Owner
		{
			get
			{
				return this._Business_Owner;
			}
			set
			{
				if ((this._Business_Owner != value))
				{
					this.OnBusiness_OwnerChanging(value);
					this.SendPropertyChanging();
					this._Business_Owner = value;
					this.SendPropertyChanged("Business_Owner");
					this.OnBusiness_OwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(550)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_ProjectSubject")]
	public partial class ProjectSubjectDTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ProjectSubjectDTO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_ProjectStage")]
	public partial class ProjectStageDTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ProjectStageDTO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_ProfileTemporary")]
	public partial class ProfileTemporaryDTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Barcode;
		
		private string _Project_Code;
		
		private string _Project_Name;
		
		private string _Project_Date;
		
		private string _Project_Stage;
		
		private string _Project_Subject;
		
		private string _Business_Owner;
		
		private string _File_Name;
		
		private string _Diagram_Name;
		
		private string _Diagram_Code;
		
		private string _Diagram_Scale;
		
		private string _Diagram_Version;
		
		private string _Plotter;
		
		private System.DateTime _Created_Date;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    partial void OnProject_CodeChanging(string value);
    partial void OnProject_CodeChanged();
    partial void OnProject_NameChanging(string value);
    partial void OnProject_NameChanged();
    partial void OnProject_DateChanging(string value);
    partial void OnProject_DateChanged();
    partial void OnProject_StageChanging(string value);
    partial void OnProject_StageChanged();
    partial void OnProject_SubjectChanging(string value);
    partial void OnProject_SubjectChanged();
    partial void OnBusiness_OwnerChanging(string value);
    partial void OnBusiness_OwnerChanged();
    partial void OnFile_NameChanging(string value);
    partial void OnFile_NameChanged();
    partial void OnDiagram_NameChanging(string value);
    partial void OnDiagram_NameChanged();
    partial void OnDiagram_CodeChanging(string value);
    partial void OnDiagram_CodeChanged();
    partial void OnDiagram_ScaleChanging(string value);
    partial void OnDiagram_ScaleChanged();
    partial void OnDiagram_VersionChanging(string value);
    partial void OnDiagram_VersionChanged();
    partial void OnPlotterChanging(string value);
    partial void OnPlotterChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    #endregion
		
		public ProfileTemporaryDTO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Project_Code
		{
			get
			{
				return this._Project_Code;
			}
			set
			{
				if ((this._Project_Code != value))
				{
					this.OnProject_CodeChanging(value);
					this.SendPropertyChanging();
					this._Project_Code = value;
					this.SendPropertyChanged("Project_Code");
					this.OnProject_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Project_Name
		{
			get
			{
				return this._Project_Name;
			}
			set
			{
				if ((this._Project_Name != value))
				{
					this.OnProject_NameChanging(value);
					this.SendPropertyChanging();
					this._Project_Name = value;
					this.SendPropertyChanged("Project_Name");
					this.OnProject_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Date", DbType="VarChar(50)")]
		public string Project_Date
		{
			get
			{
				return this._Project_Date;
			}
			set
			{
				if ((this._Project_Date != value))
				{
					this.OnProject_DateChanging(value);
					this.SendPropertyChanging();
					this._Project_Date = value;
					this.SendPropertyChanged("Project_Date");
					this.OnProject_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Stage", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Project_Stage
		{
			get
			{
				return this._Project_Stage;
			}
			set
			{
				if ((this._Project_Stage != value))
				{
					this.OnProject_StageChanging(value);
					this.SendPropertyChanging();
					this._Project_Stage = value;
					this.SendPropertyChanged("Project_Stage");
					this.OnProject_StageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Subject", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Project_Subject
		{
			get
			{
				return this._Project_Subject;
			}
			set
			{
				if ((this._Project_Subject != value))
				{
					this.OnProject_SubjectChanging(value);
					this.SendPropertyChanging();
					this._Project_Subject = value;
					this.SendPropertyChanged("Project_Subject");
					this.OnProject_SubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Business_Owner", DbType="VarChar(50)")]
		public string Business_Owner
		{
			get
			{
				return this._Business_Owner;
			}
			set
			{
				if ((this._Business_Owner != value))
				{
					this.OnBusiness_OwnerChanging(value);
					this.SendPropertyChanging();
					this._Business_Owner = value;
					this.SendPropertyChanged("Business_Owner");
					this.OnBusiness_OwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Name", DbType="VarChar(200)")]
		public string File_Name
		{
			get
			{
				return this._File_Name;
			}
			set
			{
				if ((this._File_Name != value))
				{
					this.OnFile_NameChanging(value);
					this.SendPropertyChanging();
					this._File_Name = value;
					this.SendPropertyChanged("File_Name");
					this.OnFile_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diagram_Name", DbType="VarChar(50)")]
		public string Diagram_Name
		{
			get
			{
				return this._Diagram_Name;
			}
			set
			{
				if ((this._Diagram_Name != value))
				{
					this.OnDiagram_NameChanging(value);
					this.SendPropertyChanging();
					this._Diagram_Name = value;
					this.SendPropertyChanged("Diagram_Name");
					this.OnDiagram_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diagram_Code", DbType="VarChar(20)")]
		public string Diagram_Code
		{
			get
			{
				return this._Diagram_Code;
			}
			set
			{
				if ((this._Diagram_Code != value))
				{
					this.OnDiagram_CodeChanging(value);
					this.SendPropertyChanging();
					this._Diagram_Code = value;
					this.SendPropertyChanged("Diagram_Code");
					this.OnDiagram_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diagram_Scale", DbType="VarChar(50)")]
		public string Diagram_Scale
		{
			get
			{
				return this._Diagram_Scale;
			}
			set
			{
				if ((this._Diagram_Scale != value))
				{
					this.OnDiagram_ScaleChanging(value);
					this.SendPropertyChanging();
					this._Diagram_Scale = value;
					this.SendPropertyChanged("Diagram_Scale");
					this.OnDiagram_ScaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diagram_Version", DbType="VarChar(20)")]
		public string Diagram_Version
		{
			get
			{
				return this._Diagram_Version;
			}
			set
			{
				if ((this._Diagram_Version != value))
				{
					this.OnDiagram_VersionChanging(value);
					this.SendPropertyChanging();
					this._Diagram_Version = value;
					this.SendPropertyChanged("Diagram_Version");
					this.OnDiagram_VersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Plotter", DbType="VarChar(20)")]
		public string Plotter
		{
			get
			{
				return this._Plotter;
			}
			set
			{
				if ((this._Plotter != value))
				{
					this.OnPlotterChanging(value);
					this.SendPropertyChanging();
					this._Plotter = value;
					this.SendPropertyChanged("Plotter");
					this.OnPlotterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Audit")]
	public partial class AuditDTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Project_Code;
		
		private string _Project_Name;
		
		private string _Project_Stage;
		
		private string _Project_Subject;
		
		private string _Barcode;
		
		private string _Diagram_Name;
		
		private string _File_Name;
		
		private string _Login_ID;
		
		private string _Reason;
		
		private int _Status;
		
		private System.Nullable<System.DateTime> _Apply_Date;
		
		private System.Nullable<System.DateTime> _Audit_Date;
		
		private string _Audit_User_ID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnProject_CodeChanging(string value);
    partial void OnProject_CodeChanged();
    partial void OnProject_NameChanging(string value);
    partial void OnProject_NameChanged();
    partial void OnProject_StageChanging(string value);
    partial void OnProject_StageChanged();
    partial void OnProject_SubjectChanging(string value);
    partial void OnProject_SubjectChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    partial void OnDiagram_NameChanging(string value);
    partial void OnDiagram_NameChanged();
    partial void OnFile_NameChanging(string value);
    partial void OnFile_NameChanged();
    partial void OnLogin_IDChanging(string value);
    partial void OnLogin_IDChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnApply_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnApply_DateChanged();
    partial void OnAudit_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnAudit_DateChanged();
    partial void OnAudit_User_IDChanging(string value);
    partial void OnAudit_User_IDChanged();
    #endregion
		
		public AuditDTO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

        public string Username
        {
            get;
            set;
        }
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Project_Code
		{
			get
			{
				return this._Project_Code;
			}
			set
			{
				if ((this._Project_Code != value))
				{
					this.OnProject_CodeChanging(value);
					this.SendPropertyChanging();
					this._Project_Code = value;
					this.SendPropertyChanged("Project_Code");
					this.OnProject_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Name", DbType="VarChar(50)")]
		public string Project_Name
		{
			get
			{
				return this._Project_Name;
			}
			set
			{
				if ((this._Project_Name != value))
				{
					this.OnProject_NameChanging(value);
					this.SendPropertyChanging();
					this._Project_Name = value;
					this.SendPropertyChanged("Project_Name");
					this.OnProject_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Stage", DbType="VarChar(50)")]
		public string Project_Stage
		{
			get
			{
				return this._Project_Stage;
			}
			set
			{
				if ((this._Project_Stage != value))
				{
					this.OnProject_StageChanging(value);
					this.SendPropertyChanging();
					this._Project_Stage = value;
					this.SendPropertyChanged("Project_Stage");
					this.OnProject_StageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Subject", DbType="VarChar(50)")]
		public string Project_Subject
		{
			get
			{
				return this._Project_Subject;
			}
			set
			{
				if ((this._Project_Subject != value))
				{
					this.OnProject_SubjectChanging(value);
					this.SendPropertyChanging();
					this._Project_Subject = value;
					this.SendPropertyChanged("Project_Subject");
					this.OnProject_SubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="VarChar(50)")]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diagram_Name", DbType="VarChar(250)")]
		public string Diagram_Name
		{
			get
			{
				return this._Diagram_Name;
			}
			set
			{
				if ((this._Diagram_Name != value))
				{
					this.OnDiagram_NameChanging(value);
					this.SendPropertyChanging();
					this._Diagram_Name = value;
					this.SendPropertyChanged("Diagram_Name");
					this.OnDiagram_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Name", DbType="VarChar(250)")]
		public string File_Name
		{
			get
			{
				return this._File_Name;
			}
			set
			{
				if ((this._File_Name != value))
				{
					this.OnFile_NameChanging(value);
					this.SendPropertyChanging();
					this._File_Name = value;
					this.SendPropertyChanged("File_Name");
					this.OnFile_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Login_ID
		{
			get
			{
				return this._Login_ID;
			}
			set
			{
				if ((this._Login_ID != value))
				{
					this.OnLogin_IDChanging(value);
					this.SendPropertyChanging();
					this._Login_ID = value;
					this.SendPropertyChanged("Login_ID");
					this.OnLogin_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="VarChar(300)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apply_Date")]
		public System.Nullable<System.DateTime> Apply_Date
		{
			get
			{
				return this._Apply_Date;
			}
			set
			{
				if ((this._Apply_Date != value))
				{
					this.OnApply_DateChanging(value);
					this.SendPropertyChanging();
					this._Apply_Date = value;
					this.SendPropertyChanged("Apply_Date");
					this.OnApply_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Audit_Date")]
		public System.Nullable<System.DateTime> Audit_Date
		{
			get
			{
				return this._Audit_Date;
			}
			set
			{
				if ((this._Audit_Date != value))
				{
					this.OnAudit_DateChanging(value);
					this.SendPropertyChanging();
					this._Audit_Date = value;
					this.SendPropertyChanged("Audit_Date");
					this.OnAudit_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Audit_User_ID", CanBeNull=false)]
		public string Audit_User_ID
		{
			get
			{
				return this._Audit_User_ID;
			}
			set
			{
				if ((this._Audit_User_ID != value))
				{
					this.OnAudit_User_IDChanging(value);
					this.SendPropertyChanging();
					this._Audit_User_ID = value;
					this.SendPropertyChanged("Audit_User_ID");
					this.OnAudit_User_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
